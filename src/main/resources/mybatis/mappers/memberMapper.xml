<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultMap" type="MemberDto">
		<result column="mem_no" property="memNo" />
		<result column="mem_name" property="memName" />
		<result column="mem_pwd" property="memPwd" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="address" property="address" />
		<result column="hire_date" property="hireDate" />
		<result column="end_date" property="endDate" />
		<result column="status" property="status" />
		<result column="gender" property="gender" />
		<result column="mem_ssn" property="memSSN" />
		<result column="account" property="account" />
		<result column="profile_url" property="profileURL" />
		<result column="bank_name" property="bankName" />
		<result column="vac_count" property="vacCount" />
		<result column="DEPT_CODE" property="deptCode" />
		<result column="POS_CODE" property="posCode" />
		<result column="sign_path" property="signPath" />
		<result column="pos_name" property="posName" />
		<result column="dept_name" property="deptName" />
		<result column="salary" property="salary" />
		
	</resultMap>

	<!-- 로그인(김동규) -->
	<select id="selectMember" resultMap="memberResultMap">
		select
					mem_no
				, mem_name
				, mem_pwd
				, phone
				, email
				, address
				, hire_date
				, end_date
				, status
				, gender
				, mem_ssn
				, account
				, profile_url
				, bank_name
				, vac_count
				, DEPT_CODE
				, POS_CODE
				, sign_path
				, d.dept_name
				, p.pos_name
		 from member
		 join department d using(dept_code)
     join position p using(pos_code)
		where mem_no = #{memNo}
	</select>

	<!-- 비밀번호 변경(김동규) -->
	<update id="resetPwd" parameterType="map">
		update
					 member
			 set 
			 		 mem_pwd = #{newPwd}
			   , status = 'Y'
		 where 
		 			 mem_no = #{memNo}
	</update>
	

	<!-- 나의 소속팀 전체 리스트 조회(김동규) -->
	<select id="selectTeamList" resultMap="memberResultMap">
		select
					mem_no
				, mem_name
				, mem_pwd
				, phone
				, email
				, address
				, hire_date
				, end_date
				, status
				, gender
				, mem_ssn
				, account
				, profile_url
				, bank_name
				, vac_count
				, DEPT_CODE
				, POS_CODE
				, sign_path
				, d.dept_name
				, p.pos_name
		 from member
		 join department d using(dept_code)
     join position p using(pos_code)
		where dept_code = #{deptCode}
          and mem_no != #{memNo}
	</select>
	
	<select id="checkEmail" resultMap="memberResultMap">
		select
					 mem_no
			from 
					 member
		 where email = #{mail}
	</select>
	
	<update id="updatePwd" parameterType="map">
		update
				   member
			 set 
			 		 mem_pwd = #{str}
			 	 , status = 'A'
		 where email = #{email}
	</update>

	<!-- 회원등록 (이예빈)  -->
	<insert id="insertMember">
	insert
		into member
		(
			mem_no
		, mem_name
		, mem_pwd
		, phone
		, email
		, address
		, hire_date
		, status
		, mem_ssn
		, account
		, bank_name
		, pos_code
		, dept_code
		, salary
		)
		values
		(
		  #{memNo}
		, #{memName}
		, #{memPwd}
		, #{phone}
		, #{email}
		, #{address}
		, TO_DATE(#{hireDate}, 'YYYY-MM-DD')
		, 'Y'
		, #{memSSN}
		, #{account}
		, #{bankName}
		, #{posCode}
		, #{deptCode}
		, #{salary}
		)
	</insert>
	
	<select id="selectMemNo" resultType="string"> 
		select 'C' || to_char(sysdate, 'YYYY') || lpad(count(substr(mem_no, 1, 9)) + 1, 3, '0')
from member
where substr(mem_no, 2, 4) = to_char(sysdate, 'YYYY')
	</select>




</mapper>
