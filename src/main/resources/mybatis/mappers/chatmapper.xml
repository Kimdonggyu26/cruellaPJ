<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">


<resultMap type="ChatDto" id="chatResultMap">
	<result column="CHAT_NO" property="chatNo" />
	<result column="CHAT_TITLE" property="chatTitle" />
	<result column="CHAT_REGIST_DATE" property="chatRegistDate" />
	<result column="mem_no" property="chatCreater" />
	<result column="CHAT_NEWMSG" property="chatNewMsg" />
	<result column="chat_count" property="chatCount"/>
</resultMap>



<resultMap type="chatProfileDto" id="chatProfileResultMap">
	<result column="MEM_NO" property="memNo" />
	<result column="CP_MESSAGE" property="cpMessage" />
	<result column="CP_STATUS" property="cpStatus" />
</resultMap>



<resultMap type="ChatListDto" id="chatListResultMap">
	<result column="CHAT_NO" property="chatNo" />
	<result column="MEM_NO" property="memNo" />
	<result column="CL_REGIST_DATE" property="clRegistDate" />
	<result column="CHAT_NOTICE_NO" property="chatNoticeNo" />
	<result column="CL_LOCK" property="clLock" />
	<result column="CL_ALRAM" property="clAlram" />
</resultMap>



<resultMap type="MessageDto" id="messageResultMap">
	<result column="MSG_NO" property="msgNo" />
	<result column="CHAT_NO" property="chatNo" />
	<result column="MEM_NO" property="memNo" />
	<result column="MSG_CONTENT" property="msgContent" />
	<result column="MSG_REGIST_DATE" property="msgRegistDate" />
	<result column="MSG_CHECK" property="msgCheck" />
	<result column="MSG_STATUS" property="msgStatus" />
	<result column="MSG_MODIFY_DATE" property="msgModifyDate" />
</resultMap>



<resultMap type="AlertDto" id="alertResultMap">
	<result column="ALERT_NO" property="alertNo" />
	<result column="ALERT_TYPE" property="alertType" />
	<result column="ALERT_CONTENT" property="alertContent" />
	<result column="ALERT_STATUS" property="alertStatus" />
	<result column="MEM_NO" property="memNo" />
	<result column="ALERT_REGIST_DATE" property="alertRegistDate" />
	<result column="ALERT_LINK" property="alertLink" />
</resultMap>


<resultMap type="MemberDto" id="memberResultMap">
	<result column="MEM_NO" property="memNo" />
	<result column="MEM_NAME" property="memName" />
	<result column="PHONE" property="phone" />
	<result column="EMAIL" property="email" />
	<result column="ADDRESS" property="address" />
	<result column="HIRE_DATE" property="hireDate" />
	<result column="END_DATE" property="endDate" />
	<result column="STATUS" property="status" />
	<result column="PROFILE_URL" property="profileURL" />
	<result column="DEPT_NAME" property="deptCode" />
	<result column="POS_NAME" property="posCode" />
</resultMap>


<!-- 채팅방 목록 불러오기 -->
<select id="chatList" resultMap="chatResultMap">
select 
			 c.CHAT_NO
			,CHAT_TITLE
			,CHAT_REGIST_DATE
			,CL.mem_no
			,CHAT_NEWMSG
  from chat c
  join chat_list cl on (c.chat_no = cl.chat_no)
 where cl.mem_no = #{memNo}
</select>

<!-- 유저 프로필상태 불러오기 -->
<select id="chatProFileList" resultMap="chatProfileResultMap">
	select cp.MEM_NO
		   , CP_MESSAGE
		   , CP_STATUS
	  from chat_profile cp
	  join member m on (cp.mem_no = m.mem_no)
   where m.status in ('Y','S')
</select>

<!-- 사원 목록 불러오기 -->
<select id="memberList" resultMap="memberResultMap">
	select MEM_NO
			 , MEM_NAME
			 , PHONE,EMAIL
			 , ADDRESS,HIRE_DATE
			 , END_DATE
			 , STATUS
			 , PROFILE_URL
			 , DEPT_name
			 , POS_name
	  from member m
      join department d on (m.dept_code = d.dept_code)
      join position p on (m.pos_code = p.pos_code)
   where status in ('Y','S')  
</select>

<!-- 채팅방 인원 체크 -->
<select id="chatCount" resultType="_int">
select count(chat_no) chat_count
  from chat_list
 where chat_no = #{chatNo}
 group by chat_no
</select>


<!-- 맴버 정보 불러오기 -->
<select id="memberInfo" resultMap="memberResultMap">
 	select MEM_NO
			 , MEM_NAME
			 , PHONE,EMAIL
			 , ADDRESS,HIRE_DATE
			 , END_DATE
			 , STATUS
			 , PROFILE_URL
			 , d.DEPT_NAME
			 , p.POS_NAME
	  from member m
      join department d on (m.dept_code = d.dept_code)
      join position p on (m.pos_code = p.pos_code)
   where status in ('Y','S')	 
   	 and mem_no = #{memNo} 
</select>

<!-- 프로필 정보 불러오기 -->
<select id="chatProFileInfo" resultMap="chatProfileResultMap">
	select cp.MEM_NO
		   , CP_MESSAGE
		   , CP_STATUS
	  from chat_profile cp
	  join member m on (cp.mem_no = m.mem_no)
   where m.status in ('Y','S')
     and m.mem_no = #{memNo}  
</select>

<!-- 메시지 목록 불러오기 -->
<select id="messageList" resultMap="messageResultMap">
	select MSG_NO
			 , CHAT_NO
			 , MEM_NO
			 , MSG_CONTENT
			 , MSG_REGIST_DATE
			 , MSG_CHECK
			 , MSG_STATUS
			 , MSG_MODIFY_DATE
  from message
 where chat_no = #{chatNo}
</select>

<!-- 채팅 등록 -->
<insert id="insertMessage">
 	insert
		into
 message
			 (
			 	MSG_NO
			 ,CHAT_NO
			 ,MEM_NO
			 ,MSG_CONTENT
			 ,MSG_CHECK
			 )
			 values
			 (
			 	seq_msg.nextval
			 ,#{chatNo}
			 ,#{memNo}
			 ,#{msgContent}
			 ,#{msgCheck}
			 )
</insert>



<update id="updateNewMsg">
			UPDATE 
							chat
				 SET 
				 			CHAT_REGIST_DATE = (
			    													SELECT MSG_REGIST_DATE
			   														  FROM (
			       																	 SELECT MSG_REGIST_DATE
			       																		 FROM message
			       																	  WHERE CHAT_NO = #{chatNo}
			        																ORDER BY MSG_REGIST_DATE DESC
																			     ) 
																			        WHERE rownum = 1
			),
			CHAT_NEWMSG = #{msgContent}
			WHERE CHAT_NO = #{chatNo}
</update>


</mapper>
